project 'Monal.xcodeproj'
#source 'https://cdn.cocoapods.org/'
 
# Uncomment the next line to define a global platform for your project
platform :ios, '14.0'

# ignore all warnings from all pods
inhibit_all_warnings!

def signalDeps
  pod 'SignalProtocolC', git: 'https://github.com/monal-im/libsignal-protocol-c', branch: 'master'
  pod 'SignalProtocolObjC', git: 'https://github.com/monal-im/SignalProtocol-ObjC.git', branch: 'master'
end

def monal
  use_frameworks!
  inhibit_all_warnings!
  pod 'MBProgressHUD', '~> 1.2.0'
  pod 'IDMPhotoBrowser'
  pod 'DZNEmptyDataSet'
  pod 'TOCropViewController'
  pod 'NotificationBannerSwift', '~> 3.1.0'
  pod 'FLAnimatedImage', '~> 1.0'
end

def monalxmpp
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  use_frameworks!
  inhibit_all_warnings!
  pod 'SAMKeychain'
  pod 'CocoaLumberjack/Swift'
  pod 'sqlite3/perf-threadsafe', inhibit_warnings: true
  pod 'ASN1Decoder'
  #pod 'GoogleWebRTC'
  pod 'WebRTC-lib', git: 'https://github.com/monal-im/WebRTC', branch: 'tempfix'
  signalDeps
end

target 'shareSheet' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  use_frameworks!
  inhibit_all_warnings!
  pod 'CocoaLumberjack/Swift'
end

target 'NotificationService' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  use_frameworks!
  inhibit_all_warnings!
  pod 'CocoaLumberjack/Swift'
  signalDeps
end

target 'Monal' do
  monal
end

target 'monalxmpp' do
  monalxmpp
end

target 'MonalUITests' do
  monalxmpp
  monal
end

target 'MonalXMPPUnitTests' do
  monalxmpp
end

# see https://stackoverflow.com/a/36547646/3528174
post_install do |installer|
  fix_deployment_target(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |configuration|
      configuration.build_settings.delete('ARCHS')

      if target.name == "TOCropViewController-TOCropViewControllerBundle"
        configuration.build_settings['CODE_SIGN_IDENTITY[sdk=macosx*]'] = '-'
      end
    end
  end

  # see https://github.com/CocoaPods/CocoaPods/issues/8891#issuecomment-1249151085
  installer.pods_project.targets.each do |target|
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end

# see https://github.com/CocoaPods/CocoaPods/issues/7314
def fix_deployment_target(pod_installer)
    if !pod_installer
        return
    end
    puts "Make the pods deployment target version the same as our target"
    
    project = pod_installer.pods_project
    deploymentMap = {}
    project.build_configurations.each do |config|
        deploymentMap[config.name] = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
    end
    # p deploymentMap
    
    project.targets.each do |t|
        puts "  #{t.name}"
        t.build_configurations.each do |config|
            oldTarget = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
            newTarget = deploymentMap[config.name]
            if oldTarget == newTarget
                next
            end
            puts "    #{config.name} deployment target: #{oldTarget} => #{newTarget}"
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = newTarget
        end
    end
end
