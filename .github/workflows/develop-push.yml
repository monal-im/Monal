# build a new alpha release
name: develop-push

# Controls when the action will run.
on:

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndPublishAlpha:
    # The type of runner that the job will run on
    runs-on: ['ARM64', 'self-hosted']
    env:
      APP_NAME: "Monal.alpha"
      APP_DIR: "Monal.alpha.app"
      BUILD_TYPE: "Alpha"
      ALPHA_UPLOAD_SECRET: ${{ secrets.ALPHA_UPLOAD_SECRET }}
      EXPORT_OPTIONS_CATALYST_APP_EXPORT: "../scripts/exportOptions/Alpha_Catalyst_ExportOptions.plist"
      EXPORT_OPTIONS_IOS: "../scripts/exportOptions/Alpha_iOS_ExportOptions.plist"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          submodules: true
      - name: Fetch tags
        run: git fetch --tags
      - name: Checkout submodules
        run: git submodule update -f --init --remote
      - name: Import TURN secrets
        run: |
          if [[ -e "/Users/ci/secrets.monal_alpha" ]]; then
            echo "#import \"/Users/ci/secrets.monal_alpha\"" > Monal/Classes/secrets.h
          fi
      - name: Write git hash include
        run: |
          echo "Current commit hash: $(git show-ref --hash --abbrev refs/heads/develop)"
          echo "#define ALPHA_COMMIT_HASH \"$(git show-ref --hash --abbrev refs/heads/develop)\"" > Monal/Classes/commitHash.h
      - name: Make our build scripts executable
        run: chmod +x ./scripts/build.sh
      - name: Run build
        run: ./scripts/build.sh
      - run: |
          cd Monal/build/app/tar_release
          tar -cf "../$APP_NAME.tar" "$APP_DIR"
          cd ../../../..
      - name: save changelog
        env:
          ID: ${{github.event.head_commit.id}}
          TIMESTAMP: ${{github.event.head_commit.timestamp}}
          MESSAGE: ${{github.event.head_commit.message}}
        run: |
          echo "ID: $ID" > changes.txt
          echo "Timestamp: $TIMESTAMP" >> changes.txt
          echo "$MESSAGE" >> changes.txt
      - name: Uploading to alpha site
        run: ./scripts/uploadAlpha.sh
      - name: Notarize catalyst
        run: xcrun notarytool submit ./Monal/build/app/Monal.alpha.zip --wait --team-id S8D843U34Y --key "/Users/ci/appstoreconnect/apiKey.p8" --key-id "$(cat /Users/ci/appstoreconnect/apiKeyId.txt)" --issuer "$(cat /Users/ci/appstoreconnect/apiIssuerId.txt)"
      - name: Update monal homebrew alpha repo
        run: scripts/updateAlphaHomebrew.sh
      - uses: actions/upload-artifact@v4
        with:
         name: monal-catalyst
         path: "Monal/build/app/Monal.alpha.tar"
         if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
         name: monal-ios
         path: "Monal/build/ipa/Monal.alpha.ipa"
         if-no-files-found: error
      # - uses: actions/upload-artifact@v4
      #   with:
      #    name: monal-catalyst-dsym
      #    path: Monal/build/macos_Monal.xcarchive/dSYMs
      #    if-no-files-found: error
      # - uses: actions/upload-artifact@v4
      #   with:
      #    name: monal-ios-dsym
      #    path: Monal/build/ios_Monal.xcarchive/dSYMs
      #    if-no-files-found: error
      # - name: Update translations
      #   run: |
      #     chmod +x ./scripts/updateLocalization.sh
      #     chmod +x ./scripts/xliff_extractor.py
      #     ./scripts/updateLocalization.sh NOCOMMIT
